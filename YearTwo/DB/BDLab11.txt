-- 1. Функция для определения количества сотрудников в указанном регионе
CREATE OR REPLACE FUNCTION COUNT_EMPLOYEES(P_LOCATION IN VARCHAR2)  
RETURN NUMBER IS  
V_COUNT NUMBER;  
BEGIN  
    SELECT COUNT(*) INTO V_COUNT  
    FROM EMP E  
    JOIN DEPT D ON E.D_NO = D.D_NO  
    WHERE D.LOCATION = P_LOCATION;  
    RETURN V_COUNT;  
END;  
/

-- 2. Подпрограммы
-- а) Изменение зарплаты указанному сотруднику
CREATE OR REPLACE PROCEDURE UPDATE_SALARY(  
P_E_NAME IN VARCHAR2,  
P_SALARY_CHANGE IN NUMBER 
) IS  
V_COUNT NUMBER;  
E_ERROR EXCEPTION;  
BEGIN  
    SELECT COUNT(*) INTO V_COUNT FROM EMP WHERE E_NAME = P_E_NAME; 
    IF V_COUNT = 0 THEN 
        RAISE E_ERROR; 
    END IF; 
    
    UPDATE EMP 
    SET SALARY = SALARY + P_SALARY_CHANGE 
    WHERE E_NAME = P_E_NAME; 
    
    COMMIT; 
EXCEPTION  
    WHEN E_ERROR THEN  
        RAISE_APPLICATION_ERROR(-20001, 'NOT FOUND!');  
END;  
/

-- б) Реструктуризация фирмы
CREATE OR REPLACE PROCEDURE RESTRUCTURE_COMPANY IS 
BEGIN 
    UPDATE DEPT 
    SET LOCATION = CASE  
        WHEN D_NAME = 'SALES' THEN 'DALLAS' 
        ELSE 'NEW YORK' 
    END; 
    COMMIT; 
END; 
/

-- 3. Увеличение зарплаты сотрудников в зависимости от даты устройства
UPDATE EMPLOYEE  
SET P_RATE = CASE  
    WHEN DATE_HIRE > '2022-01-01' THEN P_RATE * 1.05  
    WHEN DATE_HIRE BETWEEN '2021-01-02' AND '2021-12-30' THEN P_RATE * 1.03  
    ELSE P_RATE * 1.01  
END; 

SELECT L_NAME, F_NAME, DATE_HIRE, P_RATE AS OLD_SALARY,  
CASE  
    WHEN DATE_HIRE > '2022-01-01' THEN P_RATE * 1.05  
    WHEN DATE_HIRE BETWEEN '2021-01-02' AND '2021-12-30' THEN P_RATE * 1.03  
    ELSE P_RATE * 1.01  
END AS NEW_SALARY,  
CASE  
    WHEN DATE_HIRE > '2022-01-01' THEN '5%'  
    WHEN DATE_HIRE BETWEEN '2021-01-02' AND '2021-12-30' THEN '3%'  
    ELSE '1%'  
END AS INCREASE_PERCENT  
FROM EMPLOYEE; 

-- 4. Определение зарплаты сотрудников за период
SELECT E.F_NAME, E.L_NAME, E.COMM,  
SUM(S.QTY * P.PRICE) AS SALARY  
FROM EMPLOYEE E  
JOIN SALE S ON E.E_NO = S.E_NO  
JOIN PRODUCT P ON S.P_ID = P.P_ID  
WHERE S.SALE_DATE BETWEEN '2011-02-01' AND '2011-02-15'  
GROUP BY E.F_NAME, E.L_NAME, E.COMM; 

-- 5. Получение информации о товарах для указанной фирмы
CREATE FUNCTION GET_PRODUCT_INFO(@COMPANY_ID INT)  
RETURNS TABLE  
AS  
RETURN (  
    SELECT P.P_DESC, P.P_ID, P.PURCHASE_PRICE  
    FROM PRODUCT P  
    JOIN SUPPLIER S ON P.S_ID = S.S_ID  
    WHERE S.COMPANY_ID = @COMPANY_ID  
); 

SELECT * FROM GET_PRODUCT_INFO(ID);
